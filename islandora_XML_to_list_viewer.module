<?php
/**
 * @file
 * @author: William Panting
 * This is the global code for islandora_XML_to_list_viewer
 */

/**
 * This function is the hook into the 'islandora viewer sphere'.
 *
 * It reports that this module can handle the XML mime type and the theme
 * function to call to use it.
 *
 * @param string $mime_type
 *   The mime_type that is being queried for
 *
 * @return mixed
 *   array: 'application/XML'=>'islandora_XML_to_list'
 *   string : 'islandora_XML_to_list'
 */
function islandora_XML_to_list_viewer_islandora_viewers($mime_type = NULL) {
  if ($mime_type == NULL) {
    return array(
      'application/xml' => 'islandora_XML_to_list',
      'text/xml' => 'islandora_XML_to_list');
  }
  elseif ($mime_type == 'application/xml' || $mime_type == 'text/xml') {
    return 'islandora_XML_to_list';
  }
}

/**
 * This function makes available the islandora_XML_to_list theme.
 *
 * The theme will display an HTML unordered list
 *
 * @return array
 *   the themes available from this module
 */
function islandora_XML_to_list_viewer_theme() {
  return array(
    'islandora_XML_to_list' => array(
      'arguments' => array(
        'pid' => NULL,
        'dsid' => 'SWF',
      ),
      'template' => 'islandora_XML_to_list',
    ),
  );
}

/**
 * Preprocessor function that will prepare to display XML data as an HTML list.
 *
 * It will take the XML and format as a nested array
 * in preparation for themeing.
 *
 * @param array $vars
 *   The variables to prepare for themeing
 */
function islandora_XML_to_list_viewer_preprocess_islandora_XML_to_list(&$vars) {
  $fedora_object = islandora_object_load($vars['pid']);
  $vars['XML_datastream'] = $fedora_object[$vars['dsid']]->content;
}
